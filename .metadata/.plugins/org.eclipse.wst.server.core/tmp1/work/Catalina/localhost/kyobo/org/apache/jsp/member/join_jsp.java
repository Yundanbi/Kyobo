/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.70
 * Generated at: 2025-06-19 06:03:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String path = request.getContextPath();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	font-family: sans-serif;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	background: #fff;\r\n");
      out.write("	padding: 50px;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	transform-origin: top center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logo img {\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	margin-bottom: 30px;\r\n");
      out.write("	width: 170px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h2 {\r\n");
      out.write("	font-size: 25px;\r\n");
      out.write("	color: #5055b1;\r\n");
      out.write("	margin-bottom:10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p {\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("	color: gray;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td {\r\n");
      out.write("	font-size:14px;\r\n");
      out.write("	margin-bottom:10px;\r\n");
      out.write(" 	\r\n");
      out.write(" 	}\r\n");
      out.write("\r\n");
      out.write(".inputbox {\r\n");
      out.write("	width: 200px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	border-radius: 7px;\r\n");
      out.write("	border: 1px solid #5055b1;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	font-weight: 200%;\r\n");
      out.write("	padding-left: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".inputbox1 {\r\n");
      out.write("	width: 200px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	border-radius: 7px;\r\n");
      out.write("	border: 1px solid #5055b1;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	margin-bottom:10px;\r\n");
      out.write("	font-weight: 200%;\r\n");
      out.write("	padding-left: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("td.tdbox {\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("	font-size:14px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".checkbtn {\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	border: 1px solid #d5d5d5;\r\n");
      out.write("	border-radius: 2px;\r\n");
      out.write("	padding: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".btn {\r\n");
      out.write("	border: 1px solid #d5d5d5;\r\n");
      out.write("	border-radius: 2px;\r\n");
      out.write("	width: 50px;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".radio {\r\n");
      out.write("	margin-top: 30px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"");
      out.print(path);
      out.write("/script/member.js\"></script>\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	function idCheck() {\r\n");
      out.write("		let userid = document.frm.userid.value;\r\n");
      out.write("		if (userid === \"\") {\r\n");
      out.write("			alert(\"아이디를 입력해 주세요.\");\r\n");
      out.write("			document.frm.userid.focus();\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		const url = \"");
      out.print(request.getContextPath());
      out.write("/idcheck.do?userid=\" + userid;\r\n");
      out.write("		console.log(\"idcheck로 열리는 주소: \" + url); \r\n");
      out.write("		window.open(url, \"chkid\", \"width=400,height=200\");\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"logo\">\r\n");
      out.write("		<a href=\"");
      out.print(path);
      out.write("/index.jsp\"> <img\r\n");
      out.write("			src=\"");
      out.print(path);
      out.write("/img/logo_book.svg\" alt=\"교보문고 로고\" />\r\n");
      out.write("		</a>\r\n");
      out.write("	</div>\r\n");
      out.write("	<h2>회원 가입</h2>\r\n");
      out.write("	<p>'*' 표시 항목은 필수 입력 항목입니다.</p>\r\n");
      out.write("	<form action=\"");
      out.print(request.getContextPath());
      out.write("/join.do\" method=\"post\"\r\n");
      out.write("		name=\"frm\">\r\n");
      out.write("		<table>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=\"tdbox\">이름</td>\r\n");
      out.write("				<td><input class=\"inputbox\" type=\"text\" name=\"username\"\r\n");
      out.write("					size=\"20\">*</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=\"tdbox\">아이디</td>\r\n");
      out.write("				<td><input class=\"inputbox\" type=\"text\" name=\"userid\" size=\"20\"\r\n");
      out.write("					id=\"userid\">* <input type=\"hidden\" name=\"reid\" size=\"20\">\r\n");
      out.write("					<input class=\"checkbtn\" type=\"button\" value=\"중복 체크\"\r\n");
      out.write("					onclick=\"idCheck()\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=\"tdbox\">암 호</td>\r\n");
      out.write("				<td><input class=\"inputbox\" type=\"password\" name=\"pwd\"\r\n");
      out.write("					size=\"20\">*</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr height=\"30\">\r\n");
      out.write("				<td class=\"tdbox\" width=\"80\">암호 확인</td>\r\n");
      out.write("				<td><input class=\"inputbox\" type=\"password\" name=\"pwd_check\"\r\n");
      out.write("					size=\"20\">*</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=\"tdbox\">이메일</td>\r\n");
      out.write("				<td><input class=\"inputbox\" type=\"text\" name=\"email\" size=\"20\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=\"tdbox\">전화번호</td>\r\n");
      out.write("				<td><input class=\"inputbox1\" type=\"text\" name=\"phone\" size=\"20\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td class=\"tdbox\">등급</td>\r\n");
      out.write("				<td class=\"radio\"><input type=\"radio\" name=\"admin\" value=\"0\"\r\n");
      out.write("					checked=\"checked\"> 일반회원 &nbsp;  &nbsp; <input type=\"radio\" name=\"admin\"\r\n");
      out.write("					value=\"1\">도서 관리자</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" align=\"center\"><input class=\"btn\" type=\"submit\"\r\n");
      out.write("					value=\"확인\" onclick=\"return joinCheck()\"> <input class=\"btn\"\r\n");
      out.write("					type=\"reset\" value=\"취소\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
